<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.flixmate.flixmate.api.controller.BookingControllerIntegrationTest" time="10.305" tests="4" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="24"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\isiri\IdeaProjects\FlixMateAPI\target\test-classes;C:\Users\isiri\IdeaProjects\FlixMateAPI\target\classes;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.5\spring-boot-starter-data-jpa-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.5\spring-boot-starter-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot\3.5.5\spring-boot-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.5\spring-boot-autoconfigure-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.5\spring-boot-starter-logging-3.5.5.jar;C:\Users\isiri\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\isiri\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\isiri\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\isiri\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\isiri\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\isiri\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.5\spring-boot-starter-jdbc-3.5.5.jar;C:\Users\isiri\.m2\repository\com\zaxxer\HikariCP\6.3.2\HikariCP-6.3.2.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-jdbc\6.2.10\spring-jdbc-6.2.10.jar;C:\Users\isiri\.m2\repository\org\hibernate\orm\hibernate-core\6.6.26.Final\hibernate-core-6.6.26.Final.jar;C:\Users\isiri\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\isiri\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\isiri\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\isiri\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\isiri\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\isiri\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\isiri\.m2\repository\net\bytebuddy\byte-buddy\1.17.7\byte-buddy-1.17.7.jar;C:\Users\isiri\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\isiri\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\isiri\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\isiri\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\isiri\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\isiri\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\isiri\.m2\repository\org\springframework\data\spring-data-jpa\3.5.3\spring-data-jpa-3.5.3.jar;C:\Users\isiri\.m2\repository\org\springframework\data\spring-data-commons\3.5.3\spring-data-commons-3.5.3.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-orm\6.2.10\spring-orm-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-context\6.2.10\spring-context-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-tx\6.2.10\spring-tx-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-beans\6.2.10\spring-beans-6.2.10.jar;C:\Users\isiri\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-aspects\6.2.10\spring-aspects-6.2.10.jar;C:\Users\isiri\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.5.5\spring-boot-starter-security-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-aop\6.2.10\spring-aop-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\security\spring-security-config\6.5.3\spring-security-config-6.5.3.jar;C:\Users\isiri\.m2\repository\org\springframework\security\spring-security-web\6.5.3\spring-security-web-6.5.3.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-expression\6.2.10\spring-expression-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.5.5\spring-boot-starter-web-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.5.5\spring-boot-starter-json-3.5.5.jar;C:\Users\isiri\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.2\jackson-databind-2.19.2.jar;C:\Users\isiri\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.19.2\jackson-annotations-2.19.2.jar;C:\Users\isiri\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.2\jackson-core-2.19.2.jar;C:\Users\isiri\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.19.2\jackson-datatype-jdk8-2.19.2.jar;C:\Users\isiri\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.19.2\jackson-datatype-jsr310-2.19.2.jar;C:\Users\isiri\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.19.2\jackson-module-parameter-names-2.19.2.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-web\6.2.10\spring-web-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-webmvc\6.2.10\spring-webmvc-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-mail\3.5.5\spring-boot-starter-mail-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-context-support\6.2.10\spring-context-support-6.2.10.jar;C:\Users\isiri\.m2\repository\org\eclipse\angus\jakarta.mail\2.0.4\jakarta.mail-2.0.4.jar;C:\Users\isiri\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\isiri\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.5.5\spring-boot-starter-actuator-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.5.5\spring-boot-actuator-autoconfigure-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-actuator\3.5.5\spring-boot-actuator-3.5.5.jar;C:\Users\isiri\.m2\repository\io\micrometer\micrometer-observation\1.15.3\micrometer-observation-1.15.3.jar;C:\Users\isiri\.m2\repository\io\micrometer\micrometer-commons\1.15.3\micrometer-commons-1.15.3.jar;C:\Users\isiri\.m2\repository\io\micrometer\micrometer-jakarta9\1.15.3\micrometer-jakarta9-1.15.3.jar;C:\Users\isiri\.m2\repository\io\micrometer\micrometer-core\1.15.3\micrometer-core-1.15.3.jar;C:\Users\isiri\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\isiri\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.5.5\spring-boot-starter-tomcat-3.5.5.jar;C:\Users\isiri\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\isiri\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.44\tomcat-embed-core-10.1.44.jar;C:\Users\isiri\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.44\tomcat-embed-el-10.1.44.jar;C:\Users\isiri\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.44\tomcat-embed-websocket-10.1.44.jar;C:\Users\isiri\.m2\repository\com\microsoft\sqlserver\mssql-jdbc\12.10.1.jre11\mssql-jdbc-12.10.1.jre11.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.5.5\spring-boot-starter-test-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-test\3.5.5\spring-boot-test-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.5.5\spring-boot-test-autoconfigure-3.5.5.jar;C:\Users\isiri\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\isiri\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\isiri\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\isiri\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\isiri\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\isiri\.m2\repository\org\assertj\assertj-core\3.27.4\assertj-core-3.27.4.jar;C:\Users\isiri\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\isiri\.m2\repository\org\hamcrest\hamcrest\3.0\hamcrest-3.0.jar;C:\Users\isiri\.m2\repository\org\junit\jupiter\junit-jupiter\5.12.2\junit-jupiter-5.12.2.jar;C:\Users\isiri\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.12.2\junit-jupiter-api-5.12.2.jar;C:\Users\isiri\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\isiri\.m2\repository\org\junit\platform\junit-platform-commons\1.12.2\junit-platform-commons-1.12.2.jar;C:\Users\isiri\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\isiri\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.12.2\junit-jupiter-params-5.12.2.jar;C:\Users\isiri\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.12.2\junit-jupiter-engine-5.12.2.jar;C:\Users\isiri\.m2\repository\org\junit\platform\junit-platform-engine\1.12.2\junit-platform-engine-1.12.2.jar;C:\Users\isiri\.m2\repository\org\mockito\mockito-core\5.17.0\mockito-core-5.17.0.jar;C:\Users\isiri\.m2\repository\net\bytebuddy\byte-buddy-agent\1.17.7\byte-buddy-agent-1.17.7.jar;C:\Users\isiri\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\isiri\.m2\repository\org\mockito\mockito-junit-jupiter\5.17.0\mockito-junit-jupiter-5.17.0.jar;C:\Users\isiri\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\isiri\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-core\6.2.10\spring-core-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-jcl\6.2.10\spring-jcl-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-test\6.2.10\spring-test-6.2.10.jar;C:\Users\isiri\.m2\repository\org\xmlunit\xmlunit-core\2.10.3\xmlunit-core-2.10.3.jar;C:\Users\isiri\.m2\repository\org\springframework\security\spring-security-test\6.5.3\spring-security-test-6.5.3.jar;C:\Users\isiri\.m2\repository\org\springframework\security\spring-security-core\6.5.3\spring-security-core-6.5.3.jar;C:\Users\isiri\.m2\repository\org\springframework\security\spring-security-crypto\6.5.3\spring-security-crypto-6.5.3.jar;C:\Users\isiri\.m2\repository\com\h2database\h2\2.3.232\h2-2.3.232.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Asia/Colombo"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="24"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\Users\isiri\.jdks\openjdk-24.0.2+12-54\bin"/>
    <property name="sun.java.command" value="C:\Users\isiri\AppData\Local\Temp\surefire8538935166666119166\surefirebooter-20250917085508833_3.jar C:\Users\isiri\AppData\Local\Temp\surefire8538935166666119166 2025-09-17T08-55-08_684-jvmRun1 surefire-20250917085508833_1tmp surefire_0-20250917085508833_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\isiri\IdeaProjects\FlixMateAPI\target\test-classes;C:\Users\isiri\IdeaProjects\FlixMateAPI\target\classes;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.5\spring-boot-starter-data-jpa-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.5\spring-boot-starter-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot\3.5.5\spring-boot-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.5\spring-boot-autoconfigure-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.5\spring-boot-starter-logging-3.5.5.jar;C:\Users\isiri\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\isiri\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\isiri\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\isiri\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\isiri\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\isiri\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.5\spring-boot-starter-jdbc-3.5.5.jar;C:\Users\isiri\.m2\repository\com\zaxxer\HikariCP\6.3.2\HikariCP-6.3.2.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-jdbc\6.2.10\spring-jdbc-6.2.10.jar;C:\Users\isiri\.m2\repository\org\hibernate\orm\hibernate-core\6.6.26.Final\hibernate-core-6.6.26.Final.jar;C:\Users\isiri\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\isiri\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\isiri\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\isiri\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\isiri\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\isiri\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\isiri\.m2\repository\net\bytebuddy\byte-buddy\1.17.7\byte-buddy-1.17.7.jar;C:\Users\isiri\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\isiri\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\isiri\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\isiri\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\isiri\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\isiri\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\isiri\.m2\repository\org\springframework\data\spring-data-jpa\3.5.3\spring-data-jpa-3.5.3.jar;C:\Users\isiri\.m2\repository\org\springframework\data\spring-data-commons\3.5.3\spring-data-commons-3.5.3.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-orm\6.2.10\spring-orm-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-context\6.2.10\spring-context-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-tx\6.2.10\spring-tx-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-beans\6.2.10\spring-beans-6.2.10.jar;C:\Users\isiri\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-aspects\6.2.10\spring-aspects-6.2.10.jar;C:\Users\isiri\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.5.5\spring-boot-starter-security-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-aop\6.2.10\spring-aop-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\security\spring-security-config\6.5.3\spring-security-config-6.5.3.jar;C:\Users\isiri\.m2\repository\org\springframework\security\spring-security-web\6.5.3\spring-security-web-6.5.3.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-expression\6.2.10\spring-expression-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.5.5\spring-boot-starter-web-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.5.5\spring-boot-starter-json-3.5.5.jar;C:\Users\isiri\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.2\jackson-databind-2.19.2.jar;C:\Users\isiri\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.19.2\jackson-annotations-2.19.2.jar;C:\Users\isiri\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.2\jackson-core-2.19.2.jar;C:\Users\isiri\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.19.2\jackson-datatype-jdk8-2.19.2.jar;C:\Users\isiri\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.19.2\jackson-datatype-jsr310-2.19.2.jar;C:\Users\isiri\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.19.2\jackson-module-parameter-names-2.19.2.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-web\6.2.10\spring-web-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-webmvc\6.2.10\spring-webmvc-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-mail\3.5.5\spring-boot-starter-mail-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-context-support\6.2.10\spring-context-support-6.2.10.jar;C:\Users\isiri\.m2\repository\org\eclipse\angus\jakarta.mail\2.0.4\jakarta.mail-2.0.4.jar;C:\Users\isiri\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\isiri\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.5.5\spring-boot-starter-actuator-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.5.5\spring-boot-actuator-autoconfigure-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-actuator\3.5.5\spring-boot-actuator-3.5.5.jar;C:\Users\isiri\.m2\repository\io\micrometer\micrometer-observation\1.15.3\micrometer-observation-1.15.3.jar;C:\Users\isiri\.m2\repository\io\micrometer\micrometer-commons\1.15.3\micrometer-commons-1.15.3.jar;C:\Users\isiri\.m2\repository\io\micrometer\micrometer-jakarta9\1.15.3\micrometer-jakarta9-1.15.3.jar;C:\Users\isiri\.m2\repository\io\micrometer\micrometer-core\1.15.3\micrometer-core-1.15.3.jar;C:\Users\isiri\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\isiri\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.5.5\spring-boot-starter-tomcat-3.5.5.jar;C:\Users\isiri\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\isiri\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.44\tomcat-embed-core-10.1.44.jar;C:\Users\isiri\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.44\tomcat-embed-el-10.1.44.jar;C:\Users\isiri\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.44\tomcat-embed-websocket-10.1.44.jar;C:\Users\isiri\.m2\repository\com\microsoft\sqlserver\mssql-jdbc\12.10.1.jre11\mssql-jdbc-12.10.1.jre11.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.5.5\spring-boot-starter-test-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-test\3.5.5\spring-boot-test-3.5.5.jar;C:\Users\isiri\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.5.5\spring-boot-test-autoconfigure-3.5.5.jar;C:\Users\isiri\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\isiri\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\isiri\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\isiri\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\isiri\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\isiri\.m2\repository\org\assertj\assertj-core\3.27.4\assertj-core-3.27.4.jar;C:\Users\isiri\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\isiri\.m2\repository\org\hamcrest\hamcrest\3.0\hamcrest-3.0.jar;C:\Users\isiri\.m2\repository\org\junit\jupiter\junit-jupiter\5.12.2\junit-jupiter-5.12.2.jar;C:\Users\isiri\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.12.2\junit-jupiter-api-5.12.2.jar;C:\Users\isiri\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\isiri\.m2\repository\org\junit\platform\junit-platform-commons\1.12.2\junit-platform-commons-1.12.2.jar;C:\Users\isiri\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\isiri\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.12.2\junit-jupiter-params-5.12.2.jar;C:\Users\isiri\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.12.2\junit-jupiter-engine-5.12.2.jar;C:\Users\isiri\.m2\repository\org\junit\platform\junit-platform-engine\1.12.2\junit-platform-engine-1.12.2.jar;C:\Users\isiri\.m2\repository\org\mockito\mockito-core\5.17.0\mockito-core-5.17.0.jar;C:\Users\isiri\.m2\repository\net\bytebuddy\byte-buddy-agent\1.17.7\byte-buddy-agent-1.17.7.jar;C:\Users\isiri\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\isiri\.m2\repository\org\mockito\mockito-junit-jupiter\5.17.0\mockito-junit-jupiter-5.17.0.jar;C:\Users\isiri\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\isiri\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-core\6.2.10\spring-core-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-jcl\6.2.10\spring-jcl-6.2.10.jar;C:\Users\isiri\.m2\repository\org\springframework\spring-test\6.2.10\spring-test-6.2.10.jar;C:\Users\isiri\.m2\repository\org\xmlunit\xmlunit-core\2.10.3\xmlunit-core-2.10.3.jar;C:\Users\isiri\.m2\repository\org\springframework\security\spring-security-test\6.5.3\spring-security-test-6.5.3.jar;C:\Users\isiri\.m2\repository\org\springframework\security\spring-security-core\6.5.3\spring-security-core-6.5.3.jar;C:\Users\isiri\.m2\repository\org\springframework\security\spring-security-crypto\6.5.3\spring-security-crypto-6.5.3.jar;C:\Users\isiri\.m2\repository\com\h2database\h2\2.3.232\h2-2.3.232.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\isiri"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-07-15"/>
    <property name="java.home" value="C:\Users\isiri\.jdks\openjdk-24.0.2+12-54"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\isiri\IdeaProjects\FlixMateAPI"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\isiri\AppData\Local\Temp\surefire8538935166666119166\surefirebooter-20250917085508833_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="24.0.2+12-54"/>
    <property name="user.name" value="isiri"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\isiri\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\isiri\AppData\Local\Temp\"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="24.0.2"/>
    <property name="user.dir" value="C:\Users\isiri\IdeaProjects\FlixMateAPI"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="10644"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="windows-1252"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Users\isiri\.jdks\openjdk-24.0.2+12-54\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Users\isiri\AppData\Local\Temp\.tmp7g4Pn2;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Git\cmd;C:\Users\isiri\.jdks\openjdk-24.0.2+12-54;C:\Users\isiri\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\bin;C:\Users\isiri\AppData\Local\Programs\cursor\resources\app\bin;c:\Users\isiri\.cursor\extensions\openai.chatgpt-0.4.10-universal\bin\windows-x86_64;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="24.0.2+12-54"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="68.0"/>
  </properties>
  <testcase name="getUserBookings_Success" classname="com.flixmate.flixmate.api.controller.BookingControllerIntegrationTest" time="0.99">
    <system-out><![CDATA[08:55:10.153 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.flixmate.flixmate.api.controller.BookingControllerIntegrationTest]: BookingControllerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
08:55:10.394 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.flixmate.flixmate.api.FlixMateApiApplication for test class com.flixmate.flixmate.api.controller.BookingControllerIntegrationTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.5)

2025-09-17T08:55:11.115+05:30  INFO 10644 --- [           main] f.f.a.c.BookingControllerIntegrationTest : Starting BookingControllerIntegrationTest using Java 24.0.2 with PID 10644 (started by isiri in C:\Users\isiri\IdeaProjects\FlixMateAPI)
2025-09-17T08:55:11.117+05:30  INFO 10644 --- [           main] f.f.a.c.BookingControllerIntegrationTest : The following 1 profile is active: "test"
2025-09-17T08:55:12.650+05:30  INFO 10644 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-17T08:55:12.779+05:30  INFO 10644 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 109 ms. Found 11 JPA repository interfaces.
2025-09-17T08:55:13.653+05:30  INFO 10644 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-17T08:55:13.746+05:30  INFO 10644 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-17T08:55:13.803+05:30  INFO 10644 --- [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-09-17T08:55:14.347+05:30  INFO 10644 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-17T08:55:14.399+05:30  INFO 10644 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-09-17T08:55:14.762+05:30  INFO 10644 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-09-17T08:55:14.765+05:30  INFO 10644 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-09-17T08:55:14.847+05:30  INFO 10644 --- [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-17T08:55:16.106+05:30  INFO 10644 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: drop table if exists booking_seats cascade 
Hibernate: drop table if exists bookings cascade 
Hibernate: drop table if exists cinema_halls cascade 
Hibernate: drop table if exists movies cascade 
Hibernate: drop table if exists payments cascade 
Hibernate: drop table if exists reports cascade 
Hibernate: drop table if exists reviews cascade 
Hibernate: drop table if exists seats cascade 
Hibernate: drop table if exists showtimes cascade 
Hibernate: drop table if exists staff_schedules cascade 
Hibernate: drop table if exists user_status cascade 
Hibernate: drop table if exists users cascade 
Hibernate: create table booking_seats (booking_id integer not null, seat_id integer not null, primary key (booking_id, seat_id))
Hibernate: create table bookings (booking_id integer generated by default as identity, showtime_id integer not null, total_amount float(53) not null, total_seats integer not null, user_id integer not null, booking_date timestamp(6) not null, status varchar(255) not null, primary key (booking_id))
Hibernate: create table cinema_halls (capacity integer not null, hall_id integer generated by default as identity, location varchar(255), name varchar(255) not null, primary key (hall_id))
Hibernate: create table movies (duration integer, movie_id integer generated by default as identity, release_year integer, description varchar(255), genre varchar(255), title varchar(255) not null, primary key (movie_id))
Hibernate: create table payments (amount float(53) not null, booking_id integer not null unique, payment_id integer generated by default as identity, payment_date timestamp(6) not null, payment_method varchar(255) not null, status varchar(255) not null, transaction_id varchar(255) not null, primary key (payment_id))
Hibernate: create table reports (report_id integer generated by default as identity, user_id integer not null, generated_date timestamp(6) not null, data varchar(255) not null, type varchar(255) not null, primary key (report_id))
Hibernate: create table reviews (movie_id integer not null, rating integer not null, review_id integer generated by default as identity, user_id integer not null, review_date timestamp(6) not null, comment varchar(255), primary key (review_id))
Hibernate: create table seats (hall_id integer not null, number integer not null, seat_id integer generated by default as identity, "row" varchar(255) not null, status varchar(255) not null, primary key (seat_id))
Hibernate: create table showtimes (hall_id integer not null, movie_id integer not null, price float(53) not null, showtime_id integer generated by default as identity, end_time varchar(255), start_time varchar(255) not null, primary key (showtime_id))
Hibernate: create table staff_schedules (hall_id integer not null, schedule_id integer generated by default as identity, end_time timestamp(6) not null, start_time timestamp(6) not null, staff_name varchar(255) not null, primary key (schedule_id))
Hibernate: create table user_status (status_id integer generated by default as identity, role varchar(255) not null, status_name varchar(255) not null unique, primary key (status_id))
Hibernate: create table users (status_id integer not null, user_id integer generated by default as identity, last_login timestamp(6), registration_date timestamp(6) not null, email varchar(255) not null unique, password_hash varchar(255) not null, phone varchar(255), user_name varchar(255), primary key (user_id))
Hibernate: create index idx_user_status on bookings (user_id, status)
Hibernate: create index idx_hall_status on seats (hall_id, status)
Hibernate: alter table if exists booking_seats add constraint FKm2vak166qv8osqwe5qcxsn1p foreign key (seat_id) references seats
Hibernate: alter table if exists booking_seats add constraint FKmbi9ciapn0nvat63t0a8tv478 foreign key (booking_id) references bookings
Hibernate: alter table if exists bookings add constraint FKc7q4u7vleq90vlvy8c7lmwtyl foreign key (showtime_id) references showtimes
Hibernate: alter table if exists bookings add constraint FKeyog2oic85xg7hsu2je2lx3s6 foreign key (user_id) references users
Hibernate: alter table if exists payments add constraint FKc52o2b1jkxttngufqp3t7jr3h foreign key (booking_id) references bookings
Hibernate: alter table if exists reports add constraint FK2o32rer9hfweeylg7x8ut8rj2 foreign key (user_id) references users
Hibernate: alter table if exists reviews add constraint FK87tlqya0rq8ijfjscldpvvdyq foreign key (movie_id) references movies
Hibernate: alter table if exists reviews add constraint FKcgy7qjc1r99dp117y9en6lxye foreign key (user_id) references users
Hibernate: alter table if exists seats add constraint FKob1wunhpc6bwm7g610ha7w4ys foreign key (hall_id) references cinema_halls
Hibernate: alter table if exists showtimes add constraint FK3ylvrbaptovnnbcp07qw89xa0 foreign key (hall_id) references cinema_halls
Hibernate: alter table if exists showtimes add constraint FKeltpyuei1d5g3n6ikpsjwwil6 foreign key (movie_id) references movies
Hibernate: alter table if exists users add constraint FK7te4jcygsrgdpp4ivkydots3 foreign key (status_id) references user_status
2025-09-17T08:55:16.202+05:30  INFO 10644 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-17T08:55:17.288+05:30  INFO 10644 --- [           main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: ServletContext resource [/index.html]
2025-09-17T08:55:17.836+05:30  INFO 10644 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 3 endpoints beneath base path '/actuator'
2025-09-17T08:55:17.899+05:30  INFO 10644 --- [           main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-09-17T08:55:18.727+05:30  INFO 10644 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-09-17T08:55:18.728+05:30  INFO 10644 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-09-17T08:55:18.729+05:30  INFO 10644 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2025-09-17T08:55:18.844+05:30  INFO 10644 --- [           main] f.f.a.c.BookingControllerIntegrationTest : Started BookingControllerIntegrationTest in 8.193 seconds (process running for 9.841)
Hibernate: select b1_0.booking_id,b1_0.booking_date,b1_0.showtime_id,b1_0.status,b1_0.total_amount,b1_0.total_seats,b1_0.user_id from bookings b1_0
Hibernate: select s1_0.seat_id,s1_0.hall_id,s1_0.number,s1_0."row",s1_0.status from seats s1_0
Hibernate: select st1_0.showtime_id,st1_0.hall_id,st1_0.end_time,st1_0.movie_id,st1_0.price,st1_0.start_time from showtimes st1_0
Hibernate: select ch1_0.hall_id,ch1_0.capacity,ch1_0.location,ch1_0.name from cinema_halls ch1_0
Hibernate: select m1_0.movie_id,m1_0.description,m1_0.duration,m1_0.genre,m1_0.release_year,m1_0.title from movies m1_0
Hibernate: select u1_0.user_id,u1_0.email,u1_0.last_login,u1_0.password_hash,u1_0.phone,u1_0.registration_date,u1_0.status_id,u1_0.user_name from users u1_0
Hibernate: select us1_0.status_id,us1_0.role,us1_0.status_name from user_status us1_0
Hibernate: insert into user_status (role,status_name,status_id) values (?,?,default)
Hibernate: insert into users (email,last_login,password_hash,phone,registration_date,status_id,user_name,user_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into movies (description,duration,genre,release_year,title,movie_id) values (?,?,?,?,?,default)
Hibernate: insert into cinema_halls (capacity,location,name,hall_id) values (?,?,?,default)
Hibernate: insert into showtimes (hall_id,end_time,movie_id,price,start_time,showtime_id) values (?,?,?,?,?,default)
Hibernate: insert into seats (hall_id,number,"row",status,seat_id) values (?,?,?,?,default)
Hibernate: insert into seats (hall_id,number,"row",status,seat_id) values (?,?,?,?,default)
Hibernate: insert into bookings (booking_date,showtime_id,status,total_amount,total_seats,user_id,booking_id) values (?,?,?,?,?,?,default)
Hibernate: select b1_0.booking_id,b1_0.booking_date,b1_0.showtime_id,b1_0.status,b1_0.total_amount,b1_0.total_seats,b1_0.user_id from bookings b1_0 left join users u1_0 on u1_0.user_id=b1_0.user_id where u1_0.email=?
]]></system-out>
    <system-err><![CDATA[Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build as described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org.mockito/org/mockito/Mockito.html#0.3
WARNING: A Java agent has been loaded dynamically (C:\Users\isiri\.m2\repository\net\bytebuddy\byte-buddy-agent\1.17.7\byte-buddy-agent-1.17.7.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
  </testcase>
  <testcase name="getAvailableSeats_Success" classname="com.flixmate.flixmate.api.controller.BookingControllerIntegrationTest" time="0.07">
    <system-out><![CDATA[Hibernate: select b1_0.booking_id,b1_0.booking_date,b1_0.showtime_id,b1_0.status,b1_0.total_amount,b1_0.total_seats,b1_0.user_id from bookings b1_0
Hibernate: select s1_0.seat_id,s1_0.hall_id,s1_0.number,s1_0."row",s1_0.status from seats s1_0
Hibernate: select st1_0.showtime_id,st1_0.hall_id,st1_0.end_time,st1_0.movie_id,st1_0.price,st1_0.start_time from showtimes st1_0
Hibernate: select ch1_0.hall_id,ch1_0.capacity,ch1_0.location,ch1_0.name from cinema_halls ch1_0
Hibernate: select m1_0.movie_id,m1_0.description,m1_0.duration,m1_0.genre,m1_0.release_year,m1_0.title from movies m1_0
Hibernate: select u1_0.user_id,u1_0.email,u1_0.last_login,u1_0.password_hash,u1_0.phone,u1_0.registration_date,u1_0.status_id,u1_0.user_name from users u1_0
Hibernate: select us1_0.status_id,us1_0.role,us1_0.status_name from user_status us1_0
Hibernate: insert into user_status (role,status_name,status_id) values (?,?,default)
Hibernate: insert into users (email,last_login,password_hash,phone,registration_date,status_id,user_name,user_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into movies (description,duration,genre,release_year,title,movie_id) values (?,?,?,?,?,default)
Hibernate: insert into cinema_halls (capacity,location,name,hall_id) values (?,?,?,default)
Hibernate: insert into showtimes (hall_id,end_time,movie_id,price,start_time,showtime_id) values (?,?,?,?,?,default)
Hibernate: insert into seats (hall_id,number,"row",status,seat_id) values (?,?,?,?,default)
Hibernate: insert into seats (hall_id,number,"row",status,seat_id) values (?,?,?,?,default)
Hibernate: select s1_0.seat_id,s1_0.hall_id,s1_0.number,s1_0."row",s1_0.status from seats s1_0 left join cinema_halls ch1_0 on ch1_0.hall_id=s1_0.hall_id where ch1_0.hall_id=? and s1_0.status=?
]]></system-out>
  </testcase>
  <testcase name="createBooking_InvalidShowtime" classname="com.flixmate.flixmate.api.controller.BookingControllerIntegrationTest" time="0.066">
    <system-out><![CDATA[Hibernate: select b1_0.booking_id,b1_0.booking_date,b1_0.showtime_id,b1_0.status,b1_0.total_amount,b1_0.total_seats,b1_0.user_id from bookings b1_0
Hibernate: select s1_0.seat_id,s1_0.hall_id,s1_0.number,s1_0."row",s1_0.status from seats s1_0
Hibernate: select st1_0.showtime_id,st1_0.hall_id,st1_0.end_time,st1_0.movie_id,st1_0.price,st1_0.start_time from showtimes st1_0
Hibernate: select ch1_0.hall_id,ch1_0.capacity,ch1_0.location,ch1_0.name from cinema_halls ch1_0
Hibernate: select m1_0.movie_id,m1_0.description,m1_0.duration,m1_0.genre,m1_0.release_year,m1_0.title from movies m1_0
Hibernate: select u1_0.user_id,u1_0.email,u1_0.last_login,u1_0.password_hash,u1_0.phone,u1_0.registration_date,u1_0.status_id,u1_0.user_name from users u1_0
Hibernate: select us1_0.status_id,us1_0.role,us1_0.status_name from user_status us1_0
Hibernate: insert into user_status (role,status_name,status_id) values (?,?,default)
Hibernate: insert into users (email,last_login,password_hash,phone,registration_date,status_id,user_name,user_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into movies (description,duration,genre,release_year,title,movie_id) values (?,?,?,?,?,default)
Hibernate: insert into cinema_halls (capacity,location,name,hall_id) values (?,?,?,default)
Hibernate: insert into showtimes (hall_id,end_time,movie_id,price,start_time,showtime_id) values (?,?,?,?,?,default)
Hibernate: insert into seats (hall_id,number,"row",status,seat_id) values (?,?,?,?,default)
Hibernate: insert into seats (hall_id,number,"row",status,seat_id) values (?,?,?,?,default)
Hibernate: select u1_0.user_id,u1_0.email,u1_0.last_login,u1_0.password_hash,u1_0.phone,u1_0.registration_date,u1_0.status_id,u1_0.user_name from users u1_0 where u1_0.email=?
Hibernate: select st1_0.showtime_id,st1_0.hall_id,st1_0.end_time,st1_0.movie_id,st1_0.price,st1_0.start_time from showtimes st1_0 where st1_0.showtime_id=?
]]></system-out>
  </testcase>
  <testcase name="createBooking_Success" classname="com.flixmate.flixmate.api.controller.BookingControllerIntegrationTest" time="0.136">
    <system-out><![CDATA[Hibernate: select b1_0.booking_id,b1_0.booking_date,b1_0.showtime_id,b1_0.status,b1_0.total_amount,b1_0.total_seats,b1_0.user_id from bookings b1_0
Hibernate: select s1_0.seat_id,s1_0.hall_id,s1_0.number,s1_0."row",s1_0.status from seats s1_0
Hibernate: select st1_0.showtime_id,st1_0.hall_id,st1_0.end_time,st1_0.movie_id,st1_0.price,st1_0.start_time from showtimes st1_0
Hibernate: select ch1_0.hall_id,ch1_0.capacity,ch1_0.location,ch1_0.name from cinema_halls ch1_0
Hibernate: select m1_0.movie_id,m1_0.description,m1_0.duration,m1_0.genre,m1_0.release_year,m1_0.title from movies m1_0
Hibernate: select u1_0.user_id,u1_0.email,u1_0.last_login,u1_0.password_hash,u1_0.phone,u1_0.registration_date,u1_0.status_id,u1_0.user_name from users u1_0
Hibernate: select us1_0.status_id,us1_0.role,us1_0.status_name from user_status us1_0
Hibernate: insert into user_status (role,status_name,status_id) values (?,?,default)
Hibernate: insert into users (email,last_login,password_hash,phone,registration_date,status_id,user_name,user_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into movies (description,duration,genre,release_year,title,movie_id) values (?,?,?,?,?,default)
Hibernate: insert into cinema_halls (capacity,location,name,hall_id) values (?,?,?,default)
Hibernate: insert into showtimes (hall_id,end_time,movie_id,price,start_time,showtime_id) values (?,?,?,?,?,default)
Hibernate: insert into seats (hall_id,number,"row",status,seat_id) values (?,?,?,?,default)
Hibernate: insert into seats (hall_id,number,"row",status,seat_id) values (?,?,?,?,default)
Hibernate: select u1_0.user_id,u1_0.email,u1_0.last_login,u1_0.password_hash,u1_0.phone,u1_0.registration_date,u1_0.status_id,u1_0.user_name from users u1_0 where u1_0.email=?
Hibernate: insert into bookings (booking_date,showtime_id,status,total_amount,total_seats,user_id,booking_id) values (?,?,?,?,?,?,default)
2025-09-17T08:55:20.241+05:30  WARN 10644 --- [           main] c.f.flixmate.api.service.EmailService    : Failed to send booking confirmation email: Mail server connection failed. Failed messages: org.eclipse.angus.mail.util.MailConnectException: Couldn't connect to host, port: localhost, 587; timeout -1;
  nested exception is:
	java.net.ConnectException: Connection refused: connect
]]></system-out>
  </testcase>
</testsuite>